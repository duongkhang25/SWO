{{- range .Values.microservices }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-deployment
  namespace: imobill
  labels:
    app: {{ .name }}
    environment: {{ $.Values.global.environment }}
spec:
  replicas: {{ $.Values.global.replicas }}
  selector:
    matchLabels:
      app: {{ .name }}
      environment: {{ $.Values.global.environment }}
  template:
    metadata:
      labels:
        app: {{ .name }}
        environment: {{ $.Values.global.environment }}
    spec:
      imagePullSecrets:
        {{- range $.Values.global.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      containers:
        - name: {{ .name }}
          image: myregistry.com/{{ .name }}:{{ $.Values.global.imageTag }}
          ports:
            - containerPort: {{ .port }}
          resources:
            requests:
              cpu: {{ $.Values.global.resources.requests.cpu }}
              memory: {{ $.Values.global.resources.requests.memory }}
            limits:
              cpu: {{ $.Values.global.resources.limits.cpu }}
              memory: {{ $.Values.global.resources.limits.memory }}
          volumeMounts:
            - name: config-volume
              mountPath: /config/application.yml
              subPath: application.yml
      volumes:
        - name: config-volume
          configMap:
            name: application-config
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  namespace: imobill
  labels:
    app: {{ .Values.frontend.name }}
spec:
  replicas: {{ $.Values.global.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.frontend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.name }}
    spec:
      containers:
        - name: {{ .Values.frontend.name }}
          image: myregistry.com/{{ .Values.frontend.name }}:{{ $.Values.global.imageTag }}
          ports:
            - containerPort: 80
